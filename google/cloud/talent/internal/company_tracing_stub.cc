// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/talent/v4/company_service.proto

#include "google/cloud/talent/internal/company_tracing_stub.h"
#include "google/cloud/internal/grpc_open_telemetry.h"
#include <memory>

namespace google {
namespace cloud {
namespace talent_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

#ifdef GOOGLE_CLOUD_CPP_HAVE_OPEN_TELEMETRY

class CompanyServiceTracingStub : public CompanyServiceStub {
 public:
  ~CompanyServiceTracingStub() override = default;

  explicit CompanyServiceTracingStub(std::shared_ptr<CompanyServiceStub> child)
      : child_(std::move(child)) {}

  StatusOr<google::cloud::talent::v4::Company> CreateCompany(
      grpc::ClientContext& context,
      google::cloud::talent::v4::CreateCompanyRequest const& request) override {
    return child_->CreateCompany(context, request);
  }

  StatusOr<google::cloud::talent::v4::Company> GetCompany(
      grpc::ClientContext& context,
      google::cloud::talent::v4::GetCompanyRequest const& request) override {
    auto span =
        internal::MakeGrpcSpan("CompanyServiceStub::GetCompany", context);
    return internal::CaptureReturn(*span, child_->GetCompany(context, request),
                                   true);
  }

  StatusOr<google::cloud::talent::v4::Company> UpdateCompany(
      grpc::ClientContext& context,
      google::cloud::talent::v4::UpdateCompanyRequest const& request) override {
    return child_->UpdateCompany(context, request);
  }

  Status DeleteCompany(
      grpc::ClientContext& context,
      google::cloud::talent::v4::DeleteCompanyRequest const& request) override {
    return child_->DeleteCompany(context, request);
  }

  StatusOr<google::cloud::talent::v4::ListCompaniesResponse> ListCompanies(
      grpc::ClientContext& context,
      google::cloud::talent::v4::ListCompaniesRequest const& request) override {
    return child_->ListCompanies(context, request);
  }

 private:
  std::shared_ptr<CompanyServiceStub> child_;
};

std::shared_ptr<CompanyServiceStub> MakeCompanyServiceTracingStub(
    std::shared_ptr<CompanyServiceStub> child) {
  return std::make_shared<CompanyServiceTracingStub>(std::move(child));
}

#else

std::shared_ptr<CompanyServiceStub> MakeCompanyServiceTracingStub(
    std::shared_ptr<CompanyServiceStub> child) {
  return child;
}

#endif  // GOOGLE_CLOUD_CPP_HAVE_OPEN_TELEMETRY

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace talent_internal
}  // namespace cloud
}  // namespace google
