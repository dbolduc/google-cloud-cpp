# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

licenses(["notice"])  # Apache 2.0

# TODO : use a .bzl file, but I can't get cmake to generate it.
exporter_srcs = [
    "gcp_exporter.cc",
    "recordable.cc",
]

exporter_hdrs = [
    "gcp_exporter.h",
    "recordable.h",
]

exporter_unit_tests = [
    "gcp_exporter_test.cc",
    "recordable_test.cc",
]

# Note: I am on the fence about having this as a separate target. Maybe that
# helps discoverability, but part of me thinks it will be most convenient baked
# into google_cloud_cpp_trace. That is what CMake currently does. (Of course,
# CMake has its own problems, don't get me f***ing started).
cc_library(
    name = "google_cloud_cpp_trace_exporter",
    srcs = exporter_srcs,
    hdrs = exporter_hdrs,
    defines = ["HAVE_ABSEIL"],
    visibility = ["//:__pkg__"],
    deps = [
        "//:trace",
    ],
)

[cc_test(
    name = test.replace("/", "_").replace(".cc", ""),
    srcs = [test],
    defines = ["HAVE_ABSEIL"],
    deps = [
        ":google_cloud_cpp_trace_exporter",
        "//:trace_mocks",
        "@com_google_googletest//:gtest_main",
        "@io_opentelemetry_cpp//api",
        "@io_opentelemetry_cpp//sdk/src/trace",
    ],
) for test in exporter_unit_tests]
